/* 

*/
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;

    font-family: monospace;

    outline: none;
    border: none;

    /* Bỏ gạch dưới */
    text-decoration: none;

    /* Viết hoa chữ cái đầu mỗi word */
    text-transform: capitalize;

    font-size: 62.5%;
}

.header {
    position: absolute;
    z-index: 10;
    
    /* margin: 0 auto; */
    width: auto;
    /* height: auto; */

    top: 50px;
    /* top: 5px; */

    left: 50%;
    transform: translateX(-50%);


    text-align: center;    

    background: transparent;
    color: #333333;

    box-shadow: 0px 0px 5px 0px #ffffff;
}

.header p {
    font-size: 2rem;
    font-weight: 700;
}
/* ============================================================================================= */
.container {
    position: relative;
}

.container .slide-container .slide {
    min-height: 100vh;

    display: flex;
    align-items: center;
    flex-wrap: wrap;

    gap: 15px;

    padding: 20px 9%;
    padding-bottom: 70px;


    /* border: 1px solid red; */
}

/* ============================================================================================= */
.container .slide-container .slide .content {
    /* A shorthand property for the flex-grow, flex-shrink, and the flex-basis properties */
    /* flex: 1 1 350px; */
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 350px;

    /* @keyframes duration | easing-function | delay |iteration-count | direction | fill-mode | play-state | name */
    /* fill-mode: backwards */
    animation: slideContent 0.4s linear 0.6s backwards;

    /* border: 1px solid red; */

    /* fill-mode: backwards ==>>  
    The element will get the style values that is set by the first keyframe (depends on animation-direction), and retain this during the animation-delay period.
    ==>> tức là element sẽ có style values that is set by the first keyframe (0%) và duy trì suốt thời gian delay
    */
}


/* Theo như setting ở trên thì trong suốt thời gian delay 0.6s thì .content sẽ không hiển thị và ở vị trí 
trục X bên phía trái.
   Đến khi bắt đầu animation đến cuối thì sẽ hiện ra và move sang bên phải
*/
@keyframes slideContent {
    0% {
        opacity: 0;
        transform: translateX(-50px);
    }
}

/* ============================================================================================= */
.container .slide-container .slide .image {
    /* flex: 1 1 500px; */
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 500px;

    /* border: 1px solid blue; */
}

.container .slide-container .slide .image img {
    width: 100%;

    animation: slideImage 0.4s linear;
    /* border: 1px solid red; */
}

@keyframes slideImage {
    0% {
        opacity: 0;
        transform: translateY(-50px);
    }
}

/* ============================================================================================= */
.container .slide-container .slide .content h3 {
    /* font-size: 35px; */
    font-size: 4rem;

    color: #333;

    /* border: 1px solid blue; */
}

.container .slide-container .slide .content p {
    /* font-size: 16px; */
    font-size: 2rem;

    color: #666;

    padding: 10px 0;

    line-height: 1.4;
    /* border: 1px solid blue; */
}

.container .slide-container .slide .content .btn {
    margin-top: 10px;
    padding: 9px 40px;

    display: inline-block;
    
    background: #666;
    color: #fff;

    /* font-size: 17px; */
    font-size: 2.4rem;
}

.container .slide-container .slide .content .btn:hover {
    background: #333;
}
/* ============================================================================================= */
/* Thiết kế cho mỗi block slide-container hiển thị hoặc ẩn */
.container .slide-container {
    display: none;
}

.container .slide-container.active {
    display: block;
}

/* ============================================================================================= */
.container .slide-container:nth-child(1) .slide{
    background: linear-gradient(90deg, #b6b5b5 70%, #ffff99 30.1%);
}

.container .slide-container:nth-child(2) .slide{
    background: linear-gradient(90deg, #b6b5b5 70%, #ff9090 30.1%);
}

.container .slide-container:nth-child(3) .slide{
    background: linear-gradient(90deg, #b6b5b5 70%, #99bbff 30.1%);
}

.container .slide-container:nth-child(4) .slide{
    background: linear-gradient(90deg, #b6b5b5 70%, #99ffff 30.1%);
}

.container .slide-container:nth-child(5) .slide{
    background: linear-gradient(90deg, #b6b5b5 70%, #99ffff 30.1%);
}


/* ============================================================================================= */
.container #prev,
.container #next
{
    position: absolute;

    top: 50%;
    transform: translateY(-50%);

    color: #fff;
    background: #333;

    width: 40px;
    height: 50px;

    line-height: 50px;

    font-size: 25px;

    text-align: center;
    cursor: pointer;

    font-weight: bolder;

    /* thêm cái này vô để lỡ double click thì text không select được ==>> sẽ ko hightlight lên */
    user-select: none;
}

.container #prev:hover,
.container #next:hover
{
    background: #666;
}

.container #prev {
    left: 20px;
}
.container #next {
    right: 20px;
}

/* ============================================================================================= */
/* Responsive */
@media (max-width: 500px) {
    .container #prev {
        left: 0px;
        top: 60%;
    }

    .container #next {
        right: 0px;
        top: 60%;
    }
}

@media (max-width: 1081px) {
    .header {
        top: 5px;
    }

    .header p{
        font-size: 2rem;
    }

    .container .slide-container .slide .content h3 {
        font-size: 3rem;
    }
}



